import React, { Component } from 'react';

import classes from './Students.module.css';
import Student from './Student/Student';
import AddStudentForm from '../Navigation/Forms/AddStudentForm';
import Aux from '../../hoc/Aux';
const axios = require('axios');

class Students extends Component {
	state = {
		students: [],
		defaultImg: 'http://www.brooklyn.cuny.edu/web/com_campus_exteriors/111121_CampusExterior_738x330_002.jpg',
		nameForm: '',
		studentsIdForm: '',
		campusForm: '',
		imageSForm: '',
		id: 'the id from database',
		addMyForm: false
	};

	componentDidMount() {
		// Call our axios function below once the component mounts
		this.callBackendAPI()
			.then((res) => {
				this.setState({ students: res.studentData });
			})
			.catch((err) => console.log(err));
	}

	callBackendAPI = async () => {
		//this is a axios call that calls to the proxy with the url /login_backend that goes to express routes
		return await axios.get('/Student').then((data) => {
			// console.log(data.data.studentData, 'this is the data');
			return data.data;
		});
	};

	campFun = (ID) => {
		// this.setState({ showCampus: <CampusPage /> });
		console.log('im here to show the campus ' + this.state.location);

		return (window.location = `/students/student${ID}`);
	};

	//// Start to save the values from the form
	nameFormChangeHandler = (e) => {
		// console.log(e.target.value);
		this.nameForm = e.target.value;
		this.setState({ nameForm: e.target.value });
	};

	studentIDFormChangeHandler = (e) => {
		this.studentsIdForm = e.target.value;
		this.setState({ studentIdForm: e.target.value });
	};

	campusFormChangeHandler = (e) => {
		this.campusForm = e.target.value;
		this.setState({ campusForm: e.target.value });
	};
	imageSrcFormChangeHandler = (e) => {
		this.imageSForm = e.target.value;
		this.setState({ imageSForm: e.target.value });
	};

	// End of the values save from the form

	formAddStudentsHandler = (e) => {
		console.log('Im Clicked ');
		this.setState({ addMyForm: true });
		axios.post('/Add_Student');
	};

	addStudentHandler = (event) => {
		event.preventDefault();
		console.log('Adding a new Student ' + event);

		const studentss = [ ...this.state.students ];
		studentss.push({
			name: this.nameForm,
			studentsId: this.studentsIdForm,
			campus: this.campusForm,
			image: this.imageSForm,
			id: 'the id from database'
		});
		this.setState({ students: studentss });
		// show the element
		this.setState({ addMyForm: false });
	};

	editStudentsHandler = () => {
		console.log('Edit uni');
	};

	deleteStudentsHandler = (studentId) => {
		console.log('Deleting uni ' + studentId);
    axios.delete(`/Student?studentId=${studentId}`).then((res) => {
      window.location.reload();
    })
    .catch((err) => console.log(err));
	};

	render() {
		let { addMyForm } = this.state;

		let showContent = null;

		if (addMyForm) {
			showContent = (
				<AddStudentForm
					title="New Student Form"
					name="Student Name:"
					sutudentID="Student ID:"
					college="Student Campus:"
					imageSrc="Image Source:"
					summit={this.addStudentHandler}
					nameChange={this.nameFormChangeHandler}
					studentIDChange={this.studentIDFormChangeHandler}
					campusChange={this.campusFormChangeHandler}
					imageSrcChange={this.imageSrcFormChangeHandler}
				/>
			);
		} else {
			// When the length of Students is zero (Empty)
			if (this.state.students.length === 0) {
				showContent = (
					<div className={classes.BG}>
						<h1>All Student</h1>
						<button onClick={this.formAddStudentsHandler}>Add Student</button>
						<p>There are any student registered in the database</p>
					</div>
				);
			} else {
				// Show the campus card
				showContent = (
					<Aux>
						<div className={classes.BG}>
							<h1>All Students</h1>
							<button onClick={this.formAddStudentsHandler}>Add Student</button>
						</div>

						<div className={classes.Box}>
							{this.state.students.map((student, index) => {
								return (
									<Student
										key={index}
										id={student.id}
										campusPageClick={this.campFun}
										title={`${student.first_name} ${student.last_name}`}
										campusName={student.campus_id}
										image={this.state.defaultImg}
										edit={() => this.editStudentsHandler(index)}
										delete={() => this.deleteStudentsHandler(student.id)}
									/>
								);
							})}
						</div>
						{this.showContent1}
					</Aux>
				);
			}
		}

		return <div className={classes.Students}>{showContent}</div>;
	}
}

export default Students;
